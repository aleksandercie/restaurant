{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandergasior/Documents/projekt/restaurant-page/src/containers/Info/Info.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport classNames from 'classnames';\nimport Fade from 'react-reveal/Fade';\nimport Container from '../../common/Container/Container';\nimport Typography from '../../common/Typography/Typography';\nimport Icon from '../../common/Icon/Icon';\nimport './Info.scss';\n\nconst Info = ({\n  info,\n  variant,\n  colorTitle,\n  colorDescription\n}) => {\n  _s();\n\n  const [scrollTop, setScrollTop] = useState(0);\n\n  const renderIcon = type => /*#__PURE__*/React.createElement(Icon, {\n    name: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 32\n    }\n  });\n\n  const infoClasses = classNames('info', {\n    [`info--${variant}`]: variant\n  });\n  const infoAnimationClasses = classNames('info__title', {\n    [`info__animation--${variant}`]: variant\n  });\n\n  const isBrowser = () => typeof window !== 'undefined';\n\n  const blockRefs = useRef([null]);\n  useEffect(() => {\n    if (!isBrowser()) return;\n\n    function onScroll() {\n      const currentPosition = window.scrollY;\n      const containerPosition = document.querySelector('#container-animation');\n      containerPosition.offsetTop < currentPosition && blockRefs.current.map(item => item.innerHTML = 100);\n      setScrollTop(currentPosition);\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => window.removeEventListener('scroll', onScroll); // const getElements = document.querySelectorAll('.info__animation--image');\n    // const getPositionElements = getElements[0].offsetTop;\n  }, [scrollTop]);\n  return /*#__PURE__*/React.createElement(Container, {\n    customClass: infoClasses,\n    id: variant && 'container-animation',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, info.map((item, index) => {\n    const {\n      name,\n      title,\n      description\n    } = item;\n    return /*#__PURE__*/React.createElement(Fade, {\n      bottom: true,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      customClass: \"info__item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      customClass: \"info__icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, renderIcon(name)), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      customClass: infoAnimationClasses,\n      color: colorTitle,\n      dataCount: variant && title,\n      innerRef: element => {\n        blockRefs.current[index] = element;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"p\",\n      customClass: \"info__description\",\n      color: colorDescription,\n      type: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, description)));\n  }));\n};\n\n_s(Info, \"jfovGQUSqBdWvJEomVPYPwnln3c=\");\n\n_c = Info;\nexport default Info;\n\nvar _c;\n\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"sources":["/Users/aleksandergasior/Documents/projekt/restaurant-page/src/containers/Info/Info.js"],"names":["React","useEffect","useState","useRef","classNames","Fade","Container","Typography","Icon","Info","info","variant","colorTitle","colorDescription","scrollTop","setScrollTop","renderIcon","type","infoClasses","infoAnimationClasses","isBrowser","window","blockRefs","onScroll","currentPosition","scrollY","containerPosition","document","querySelector","offsetTop","current","map","item","innerHTML","addEventListener","removeEventListener","index","name","title","description","element"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport classNames from 'classnames';\nimport Fade from 'react-reveal/Fade';\nimport Container from '../../common/Container/Container';\nimport Typography from '../../common/Typography/Typography';\nimport Icon from '../../common/Icon/Icon';\nimport './Info.scss';\n\nconst Info = ({ info, variant, colorTitle, colorDescription }) => {\n  const [scrollTop, setScrollTop] = useState(0);\n  const renderIcon = (type) => <Icon name={type} />;\n\n  const infoClasses = classNames('info', {\n    [`info--${variant}`]: variant,\n  });\n\n  const infoAnimationClasses = classNames('info__title', {\n    [`info__animation--${variant}`]: variant,\n  });\n\n  const isBrowser = () => typeof window !== 'undefined';\n  const blockRefs = useRef([null]);\n\n  useEffect(() => {\n    if (!isBrowser()) return;\n\n    function onScroll() {\n      const currentPosition = window.scrollY;\n      const containerPosition = document.querySelector('#container-animation');\n\n      containerPosition.offsetTop < currentPosition &&\n        blockRefs.current.map((item) => (item.innerHTML = 100));\n\n      setScrollTop(currentPosition);\n    }\n    window.addEventListener('scroll', onScroll);\n\n    return () => window.removeEventListener('scroll', onScroll);\n\n    // const getElements = document.querySelectorAll('.info__animation--image');\n    // const getPositionElements = getElements[0].offsetTop;\n  }, [scrollTop]);\n\n  return (\n    <Container customClass={infoClasses} id={variant && 'container-animation'}>\n      {info.map((item, index) => {\n        const { name, title, description } = item;\n        return (\n          <Fade bottom key={index}>\n            <Container customClass=\"info__item\">\n              <Container customClass=\"info__icon\">{renderIcon(name)}</Container>\n              <Typography\n                variant=\"h2\"\n                customClass={infoAnimationClasses}\n                color={colorTitle}\n                dataCount={variant && title}\n                innerRef={(element) => {\n                  blockRefs.current[index] = element;\n                }}\n              >\n                0\n              </Typography>\n              <Typography\n                variant=\"p\"\n                customClass=\"info__description\"\n                color={colorDescription}\n                type=\"description\"\n              >\n                {description}\n              </Typography>\n            </Container>\n          </Fade>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Info;\n"]},"metadata":{},"sourceType":"module"}