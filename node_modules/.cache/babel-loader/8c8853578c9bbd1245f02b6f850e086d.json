{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandergasior/Documents/projekt/restaurant-page/src/components/Form/Form.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport Container from '../../common/Container/Container';\nimport Typography from '../../common/Typography/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => /*#__PURE__*/_jsxDEV(Container, {\n  customClass: \"form\",\n  children: [/*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h2\",\n    children: \"Anywhere in your app!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      name: '',\n      phone: '',\n      date: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      if (values.name && !/^([a-zA-Z ]){2,30}$/i.test(values.name)) {\n        errors.name = 'Invalid name';\n      }\n\n      if (values.phone && !/\\d{9}/.test(values.phone)) {\n        errors.phone = 'Invalid phone number (890190290)';\n      }\n\n      if (!values.date) {\n        errors.date = 'Required';\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        console.log(values);\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting\n      /* and other goodies */\n\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        onChange: handleChange,\n        onBlur: handleBlur,\n        value: values.name,\n        placeholder: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), errors.name && touched.name && errors.name, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        onChange: handleChange,\n        onBlur: handleBlur,\n        value: values.email,\n        placeholder: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        onChange: handleChange,\n        onBlur: handleBlur,\n        value: values.phone,\n        placeholder: \"phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), errors.phone && touched.phone && errors.phone, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        onChange: handleChange,\n        onBlur: handleBlur,\n        value: values.date,\n        placeholder: \"date\",\n        min: \"2021-01-01\",\n        max: \"2022-12-31\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), errors.date && touched.date && errors.date, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/aleksandergasior/Documents/projekt/restaurant-page/src/components/Form/Form.js"],"names":["React","Formik","Container","Typography","Form","email","name","phone","date","values","errors","test","setSubmitting","setTimeout","console","log","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport Container from '../../common/Container/Container';\nimport Typography from '../../common/Typography/Typography';\n\nconst Form = () => (\n  <Container customClass=\"form\">\n    <Typography variant=\"h2\">Anywhere in your app!</Typography>\n    <Formik\n      initialValues={{ email: '', name: '', phone: '', date: '' }}\n      validate={(values) => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n        if (values.name && !/^([a-zA-Z ]){2,30}$/i.test(values.name)) {\n          errors.name = 'Invalid name';\n        }\n        if (values.phone && !/\\d{9}/.test(values.phone)) {\n          errors.phone = 'Invalid phone number (890190290)';\n        }\n        if (!values.date) {\n          errors.date = 'Required';\n        }\n\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          console.log(values);\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        /* and other goodies */\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.name}\n            placeholder=\"name\"\n          />\n          {errors.name && touched.name && errors.name}\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.email}\n            placeholder=\"email\"\n          />\n          {errors.email && touched.email && errors.email}\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.phone}\n            placeholder=\"phone\"\n          />\n          {errors.phone && touched.phone && errors.phone}\n          <input\n            type=\"date\"\n            name=\"date\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.date}\n            placeholder=\"date\"\n            min=\"2021-01-01\"\n            max=\"2022-12-31\"\n          />\n          {errors.date && touched.date && errors.date}\n          <button type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </button>\n        </form>\n      )}\n    </Formik>\n  </Container>\n);\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}